//Mary Ngwenya
//26May2016
//CIS170C
//Week 4 LAB



//$//  Revised:   6/3/2016
//$//  This symbol:  //$//    INDICATES A CODE CHANGE FROM THE INITIAL VERSION




#include <iostream>
#include <iomanip>
#include <cctype>

using namespace std;

char ReadDials(char&, char&, char&, char&, char&, char&, char&, char&);		    // function prototype
int ToDigit(char&);			                                                    //second function prototype

//$//    REMOVE CODE:     int ToDigit(char, char, char, char, char, char, char, char);					//second function prototype

//$//    REMOVE CODE:    void Acknowledgecall(char, char, char, char, char, char, char, char);			//third function prototypes
void AcknowledgeCall(char, char, char, char, char, char, char, char);			//third function prototypes     //$// use proper camel-case name "Call" not "call"



char ReadDials(char& a, char& b, char& c, char& d, char& e, char& f, char& g, char& h)
{																			//proccess phone number entry function
									//function to change letters to correct number value
	cout << endl << "Please enter the 8 digit number you wish to dial." << endl;     //prompt user to enter the  number
	cin >> a;              //$//  COMMENT - GET FIRST CHAR
	if (a == 'q' || a == 'Q')												// quit program fuction
		return -5;

//	cin >> b >> c >> d >> e >> f >> g >> h;			//$//  COMMENT - MISLEADING COMMENT:						//validate entry    
	cin >> b >> c >> d >> e >> f >> g >> h;			//$//  COMMENT - GET REMAINING 7 CHAR'S


//$//           COMMENT:  VALIDATE THAT EVERY CHAR IS A LETTER OR A DIGIT
	if (ToDigit(a) == -1) return -1;        //$// ADD CODE:  IF CHAR a IS INVALID RETURN -1
	if (ToDigit(b) == -1) return -1;
	if (ToDigit(c) == -1) return -1;
//	if (ToDigit(d) == -1) return -1;        //$// COMMENT:  DO NOT TEST 'd' WHICH MUST BE THE CHAR '-'
	if (ToDigit(e) == -1) return -1;
	if (ToDigit(f) == -1) return -1;
	if (ToDigit(g) == -1) return -1;
	if (ToDigit(h) == -1) return -1;

//$//           COMMENT:  CHECK FOR OTHER (SPECIAL CASE) ERRORS
//$//    REMOVE CODE:	if (a == 0)																//get error codes
	if (a == '0')                                          //$// IMPORTANT!!!    0 IS AN INTEGER.   '0' IS A CHAR (ASCII CODE VALUE = 48)
		return -2;

//$//    REMOVE CODE:	if (a == 5 && b == 5 && c == 5)
	if (a == '5' && b == '5' && c == '5')                   //$// IMPORTANT!!!    5 IS AN INTEGER.   '5' IS A CHAR (ASCII CODE VALUE = 53)
		return -3;

	if (d != '-')
		return -4;

//$//           COMMENT:  WHERE IS THE VALUE OF	result CALCULATED ?????     WE MUST HANDLE 8 DIGITS 'a' THROUGH 'h' SEPARATELY   (EXCEPT: WE NOW KNOW 'd' = '-')
//$//    REMOVE CODE:   	if (result < 0 || '@' || '#' || '$' || '%' || '^' || '&' || '*' || '(' || ')' || '_' || '+' || '=' || '|' || '/' || '>' || '<')   // no special characters or negative entries aloud
//$//    REMOVE CODE:   			return -1;	
//$//    REMOVE CODE:	else 
//$//    REMOVE CODE:		int result = ToDigit(a,b,c,d,e,f,g,h);	               //$//  PARAMTER LIST DOES NOT MATCH FUNCTION !

	return 0;                 //$// COMMENT:  PHONE NUMBER IS VALID
}



int ToDigit(char &l1)															//function to change letters to correct number value
{
	
		switch(toupper(l1))														//change char to upper case
		{                          //$//  COMMENT - CONVERT LETTERS TO DIGITS BASED ON THE TRADITIONAL TELEPHONE ROTARY DIAL   (ca. 1904)
			case'A':
			case'B': 
			case'C': l1 = '2'; break;          //$//  COMMENT - CONVERT	'A', 'B' AND 'C' TO THE DIGIT '2'.   BREAK AND RETURN 0
			case'D': 
			case'E': 
			case'F': l1 = '3'; break;
			case'G': 
			case'H': 
			case'I': l1 = '4'; break;
			case'J': 
			case'K': 
			case'L': l1 = '5'; break;
			case'M': 
			case'N': 
			case'O': l1 = '6'; break;
			case'P': 
			case'Q': 
			case'R': 
			case'S': l1 = '7'; break;
			case'T': 
			case'U': 
			case'V': l1 = '8'; break;
			case'W': 
			case'X': 
			case'Y': 
			case'Z': l1 = '9'; break;
			case '0':               //$//  ADDED CODE - CHECK FOR DIGITS
			case '1':               //$//  ADDED CODE
			case '2':               //$//  ADDED CODE
			case '3':               //$//  ADDED CODE
			case '4':               //$//  ADDED CODE
			case '5':               //$//  ADDED CODE
			case '6':               //$//  ADDED CODE
			case '7':               //$//  ADDED CODE
			case '8':               //$//  ADDED CODE
			case '9':  break;             //$//  ADDED CODE
			default:   return -1;               //$//  ADDED CODE - default case  ERROR:  THE CHAR IN  l1   IS NOT A LETTER OR A DIGIT
		}
	
	return 0;     //$//  COMMENT - MADE IT OUT OF switch!  SO THE CHAR IS DEFINITELY A LETTER OR A DIGIT!
}



//$//    REMOVE CODE:      void AcknowledgeCall(char a, char b, char c, char d, char e, char f, char g, char h)
void AcknowledgeCall(char a, char b, char c, char d, char e, char f, char g, char h)                              //$// use proper camel-case name "Call" not "call"
	{
		cout << "Dialing the phone number you entered:    " << a << b << c << d << e << f << g << h << endl;
	}



int main()																		//  main function
{																	
	                                           //$//  COMMENT - Phone-Dialing Program
	char a,b,c,d,e,f,g,h;           //$//  ADDED ;     SYNTAX ERROR      //$//  COMMENT - DECLARE 8 chars FOR THE INPUT PHONE NUMBER
	int returnValue = 0;            //$//  ADDED ;     SYNTAX ERROR

//$//    REMOVE CODE:      while (returnValue != -5)      //$// SEE SPECIFICATION IN PSEUDOCODE "STEP 2"


	while (true)                            //$//  COMMENT - EASY (INFINITE) LOOP FOREVER UNTIL USER REQUESTS TO QUIT  (case -5)
	{ 
		returnValue = ReadDials(a,b,c,d,e,f,g,h);                      //$//  COMMENT - GET AND VERIFY PHONE NUMBER FROM USER

		switch(returnValue)														//error switch
		{
			case -5:				                                   //$//  COMMENT - CASE -5:  USER REQUEST TO QUIT PROGRAM                                                   
                                                       				   //$//  ADDED CODE - SEE SPECIFICATION IN PSEUDOCODE "STEP 2"
				cout << endl << "Thank you! Call again." << endl;      //$//  ADDED CODE (TRANSFER)
				system("pause");                                       //$//  ADDED CODE  //$//  COMMENT - HOLD WINDOW OPEN FOR USER
				return 0;                                              //$//  ADDED CODE - GET OUT OF DODGE CITY NOW!

			case -1: cout << "ERROR - An invalid character was entered" << endl;
				break;                                                 //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW 
			case -2: cout << "ERROR - Phone number cannot begin with 0" << endl;
				break;                                                 //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW
			case -3: cout << "ERROR - Phone number cannot begin with 555" << endl;
				break;                                                 //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW
			case -4: cout << "ERROR - Hyphen is not in the correct position" << endl;                  //$//  SYNTAX ERROR:  ADDED : AFTER case
				break;                                                 //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW
				                                                       //$//  COMMENT - DO NOT CALL AcknowledgeCall() IF ERROR
//$//    REMOVE CODE:     		case -5: cout << "Thank you! Call again." << endl;
//$//    REMOVE CODE:      		default: Acknowledgecall(a,b,c,d,e,f,g,h);
//$//		default: AcknowledgeCall(a,b,c,d,e,f,g,h);                                  //$// use proper camel-case name "Call" not "call"
//$//    REMOVE CODE:		default: AcknowledgeCall(a,b,c,d,e,f,g,h);

			case 0:                                                    //$//  ADDED CODE - NO ERROR FROM ReadDials()
				AcknowledgeCall(a,b,c,d,e,f,g,h);                      //$//  ADDED CODE
				cout << endl;                                          //$//  ADDED CODE
				break;                                                 //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW

			default:                                                   //$//  ADDED CODE - CHECK FOR PROGRAM MALFUNCTION - DEBUG - BEST PRACTICE
				cout << "Program Internal Failure - Please call Tech Support." << endl;     //$//  ADDED CODE - A BIT OF HUMOR
				break;                                                                      //$//  ADDED CODE - GET OUT OF switch STRUCTURE NOW
		}                    //$//  COMMENT - END OF switch STRUCTURE - BEST PRACTICE COMMENT

//$//    REMOVE CODE:      	system("pause");
//$//    REMOVE CODE:      	return 0;
	}                        //$//  COMMENT - END OF while (true) LOOP - BEST PRACTICE COMMENT

                                                     //$//  COMMENT - PROGRAM NEVER (NEVER NEVER NEVER) GETS TO THIS POINT, BY DESIGN
}

 
